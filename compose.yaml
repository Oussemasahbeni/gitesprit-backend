name: gitesprit
services:
  postgres:
    container_name: postgres-sql-gitesprit
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: gitesprit
    volumes:
      - postgres:/var/lib/postgresql/data
    #      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - gitesprit-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak:
    container_name: keycloak-gitesprit
    image: quay.io/keycloak/keycloak:26.2
    ports:
      - "8085:8080" #  web interface
      - "9000:9000" #  health check
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      HTTP_METRICS_HISTOGRAMS_ENABLED: true
    networks:
      - gitesprit-network
    volumes:
      - ./kc-providers:/opt/keycloak/providers/
      - ./kc-realm/:/opt/keycloak/data/import/
    depends_on:
      - postgres
    command:
      - start-dev
      - --import-realm
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - gitesprit-network
  mail-dev:
    container_name: mail-dev-gitesprit
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - gitesprit-network
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      restart: unless-stopped
      networks:
       - gitesprit-network
  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
       - "3000:3000"
      restart: unless-stopped
      volumes:
        - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
        - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      environment:
        - GF_SMTP_ENABLED=true
        - GF_SMTP_HOST=mail-dev:1025
        # - GF_SMTP_USER=             # Not needed for MailDev
        # - GF_SMTP_PASSWORD=         # Not needed for MailDev
        - GF_SMTP_SKIP_VERIFY=true
        - GF_SMTP_FROM_ADDRESS=grafana-alerts@example.com
        - GF_SMTP_FROM_NAME=Grafana Alerts
        - GF_SMTP_STARTTLS_POLICY=NoStartTLS # Important for MailDev
        # For Unified Alerting (Grafana 8+)
        - GF_UNIFIED_ALERTING_ENABLED=true
      depends_on:
          - mail-dev # if maildev is also in this compose file
      networks:
        - gitesprit-network
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    networks:
      - gitesprit-network

networks:
  gitesprit-network:
    driver: bridge

volumes:
  postgres:
    driver: local
  loki-data:
    driver: local