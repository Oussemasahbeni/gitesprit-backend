spring:
  profiles:
    active: prod
  application:
    name: gitesprit
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    #show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 100
          fetch_size: 200
          order_inserts: true
          order_updates: true
        format_sql: true
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        #generate_statistics: true
  flyway:
    url: ${DB_URL}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    table: flyway_history
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 15MB
      enabled: true
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin
    virtual-host: /
    ssl:
      enabled: false

  threads:
    virtual:
      enabled: true



keycloak:
  realm: ${KEYCLOAK_REALM}
  client: ${KEYCLOAK_CLIENT_ID}
  url: ${KEYCLOAK_URL}
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET}


application:
  frontend:
    url: ${FRONTEND_URL}
  backend:
    url: ${BACKEND_URL}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}
  websocket:
    endpoint: "/ws"
    allowed-origins: ${FRONTEND_URL}
    application-destination-prefix: "/app"
    user-destination-prefix: "/user"
    broker: "/user"

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs
    operationsSorter: method
    display-request-duration: true
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID}
      client-secret: ${KEYCLOAK_CLIENT_SECRET}
      scopes: openid profile
    oauth2-redirect-url: ${application.backend.url}/swagger-ui/oauth2-redirect.html
  default-produces-media-type: application/json

server:
  port: 8082

logging:
  level:
    org.springframework.security: DEBUG

#management:
#  metrics:
#    distribution:
#      percentiles-histogram:
#        http.server.requests: true
#  endpoints:
#    web:
#      exposure:
#        include: health,prometheus
#  endpoint:
#    health:
#      show-details: always
#  prometheus:
#    metrics:
#      export:
#        enabled: true